# Generated by Django 2.0.7 on 2018-07-27 16:59

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bot_balance', models.IntegerField(auto_created=True, default=1000, verbose_name='Bot_stack')),
                ('bot_name', models.CharField(max_length=20, unique=True, verbose_name='Bot_name')),
                ('bot_image', models.ImageField(blank=True, null=True, upload_to='static/images', verbose_name='Bot_image')),
            ],
        ),
        migrations.CreateModel(
            name='CurrentGame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank', models.IntegerField(verbose_name='bank')),
                ('big_blind', models.IntegerField(verbose_name='big_blind')),
                ('small_blind', models.IntegerField(verbose_name='small_blind')),
                ('flop_1_card', models.CharField(blank=True, max_length=20, null=True)),
                ('flop_2_card', models.CharField(blank=True, max_length=20, null=True)),
                ('flop_3_card', models.CharField(blank=True, max_length=20, null=True)),
                ('turn', models.CharField(blank=True, max_length=20, null=True)),
                ('river', models.CharField(blank=True, max_length=20, null=True)),
                ('winner', models.CharField(max_length=20, verbose_name='winner')),
            ],
        ),
        migrations.CreateModel(
            name='GameWithPlayers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('handled_card_1', models.CharField(max_length=20, verbose_name='first_card')),
                ('handled_card_2', models.CharField(max_length=20, verbose_name='second_card')),
                ('seat', models.IntegerField(default=0)),
                ('current_stack', models.IntegerField(default=0)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_property', to='PokerApp.CurrentGame')),
                ('player_bot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bot_player', to='PokerApp.Bot')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.IntegerField(auto_created=True, default=100, verbose_name='Stack')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('username', models.CharField(max_length=130, unique=True, verbose_name='username')),
                ('email', models.EmailField(max_length=254, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='gamewithplayers',
            name='player_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_player', to=settings.AUTH_USER_MODEL),
        ),
    ]
